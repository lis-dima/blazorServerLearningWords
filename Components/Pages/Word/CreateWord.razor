@page "/word/en/create"

@rendermode InteractiveServer

@inject NavigationManager navManager
@inject WordController createWordService

<PageTitle>Create new word</PageTitle>
<div class="container">
    <div  >
        <div class="form-group row">
            <label for="wordinput" class="col-sm-2 col-form-label">Word:</label>
            <div class="col-sm-10  ">
              <InputText  @bind-Value="@Model.Word" class="form-control " id="wordinput" placeholder="Word" />
            </div>
        </div>
        <div class="form-group row mt-2 ">
            <label for="translationinput" class="col-sm-2 col-form-label">Transcription:</label>
            <div class="col-sm-10 ">
              <InputText  @bind-Value="@Model.Transcription" class="form-control " id="translationinput" placeholder="Transcription UK" />
            </div>
        </div>
    </div>
    <div class="d-flex mt-3">
        <div class="col-4">
            <div>
                <h3>Descriptions:</h3>
                <ul>
                    @if (Model.Descriptions != null)
                        @foreach (var description in Model.Descriptions)
                        {
                            <li @onclick="()=>RemoveAndEdit(description.Value)">@description.Value</li>
                        }
                </ul>
            </div>
            <div class="p-2">
                <InputTextArea  @bind-Value="@inputDescription" class="form-control"></InputTextArea >
                <div class="d-flex justify-content-end py-2">
                    <Dropdown 
                        Title="@inputDescriptionLang.ToString()"
                        Options="@(Enum.GetNames(typeof(Language)).ToList())" 
                        OnClickEvent="@(option => inputDescriptionLang = EnumConverter.LangFromStr(option))"
                        Classes="mx-2"
                    />
                    <button @onclick="AddNewDescription" class="btn btn-outline-primary ">Add</button>
                </div>
            </div>
        </div>
        <div class="col-4">
            <div>
                <h3>Translations:</h3>
                <ul>
                    @if (Model.Translations != null)
                        @foreach (var trans in Model.Translations)
                        {
                            <li @onclick="()=>RemoveAndEdit(trans.Value)">@trans.Value</li>
                        }
                </ul>
            </div>
            <div class="p-2">
                <InputTextArea  @bind-Value="@inputTranslation" class="form-control"></InputTextArea >
                <div class="d-flex justify-content-end py-2">
                    <Dropdown 
                        Title="@inputTranslationLang.ToString()"
                        Options="@(Enum.GetNames(typeof(Language)).ToList())" 
                        OnClickEvent="@(option => inputTranslationLang = EnumConverter.LangFromStr(option))" 
                        Classes="mx-2"
                    />
                    <button @onclick="AddNewTranslation" class="btn btn-outline-primary ">Add</button>
                </div>
            </div>
        </div>
        <div class="col-4">
            <div>
                <h3>Examples:</h3>
                <ul>
                    @if (Model.Examples != null)
                        @foreach (var example in Model.Examples)
                        {
                            <li @onclick="()=>RemoveAndEdit(example.Value)">@example.Value</li>
                        }
                </ul>
            </div>
            <div class="p-2">
                <InputTextArea  @bind-Value="@inputExample" class="form-control"></InputTextArea >
                <div class="d-flex justify-content-end py-2">
                    <button @onclick="AddNewExanple" class="btn btn-outline-primary ">Add</button>
                </div>
            </div>

        </div>
    </div>
</div>
<div class="d-flex justify-content-center " style="margin-bottom:70px;">   
<button @onclick="TryCreateWord" class="btn btn-primary">Create new Word</button>
</div>

@code {
    public CreateWordDto Model { get; set; } = new();
    public string inputDescription;
    public Language inputDescriptionLang;
    public string inputTranslation;
    public Language inputTranslationLang = Language.Ru;
    public string inputExample;

    protected override Task OnInitializedAsync()
    {

        Description d1 = new Description() { Value = "Description 1" };

        Translation t1 = new Translation() { Language = Language.Ru, Value = "Перевод 1 " };

        Example e1 = new Example() { Value = "Example 1" };

        Model.Translations.Add(t1);

        Model.Descriptions.Add(d1);

        Model.Examples.Add(e1);
        return base.OnInitializedAsync();
    }

    void RemoveAndEdit(string text)
    {
        var res = 0;
        res = Model.Descriptions.RemoveAll(d => d.Value == text);
        if (res != 0)
            inputDescription = text;
        res = Model.Translations.RemoveAll(d => d.Value == text);
        if (res != 0)
            inputTranslation = text;
        res = Model.Examples.RemoveAll(d => d.Value == text);
        if (res != 0)
            inputExample = text;
    }

    public async Task TryCreateWord()
    {
        await createWordService.CreateWord(Model);
    }

    private void AddNewDescription(MouseEventArgs e)
    {
        var text2Add = CheckText(inputDescription);
        Model.Descriptions.Add(new() { Value = text2Add, Language = inputDescriptionLang });
    }
    private void AddNewTranslation(MouseEventArgs e)
    {
        var text2Add = CheckText(inputTranslation);
        Model.Translations.Add(new() { Value = text2Add, Language = inputTranslationLang  });
    }
    private void AddNewExanple(MouseEventArgs e)
    {
        var text2Add = CheckText(inputExample);
        Model.Examples.Add(new() { Value = text2Add });
    }

    string CheckText(string text)
    {
        return text;
    }
}
